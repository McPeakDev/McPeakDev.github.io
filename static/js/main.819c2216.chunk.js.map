{"version":3,"sources":["Components/Resume.js","Components/NewsDemo.js","Components/Projects.js","Components/LandingPage.js","Services/serviceWorker.js","index.js"],"names":["Resume","className","id","alt","src","height","width","target","rel","href","React","PureComponent","NewsDemo","props","state","stories","window","fetch","method","then","res","json","data","this","setState","Button","variant","CardColumns","map","story","Card","Img","Body","Title","Text","Projects","repos","repo","LandingPage","linkState","pageShown","event","linkName","preventDefault","nextLink","Navbar","bg","Brand","Nav","Link","onClick","e","handleClick","Fade","onExited","in","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"8PA8FeA,E,uKAxFT,OACE,yBAAKC,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKC,GAAG,SAASD,UAAU,eACvB,yBAAKE,IAAI,GAAGC,IAAI,wDAAwDC,OAAO,OAAOC,MAAM,QAC5F,iDACA,0EACA,gDAAqB,uBAAGL,UAAU,aAAaM,OAAO,SAASC,IAAI,sBAAsBC,KAAK,iCAAgC,sCAA9H,MAAkJ,uBAAGR,UAAU,aAAaQ,KAAK,+BAA8B,qDAC/M,6BACA,yBAAKR,UAAU,gBAEnB,yBAAKC,GAAG,UAAUD,UAAU,aACxB,yDACA,6BACA,kSACA,8BAEJ,yBAAKC,GAAG,YAAYD,UAAU,aAC1B,yCACA,yBAAKA,UAAU,eACf,6BACA,iFACA,4BAAI,oFACJ,4BAAI,+FACJ,4BAAI,mEACJ,8GACA,mGACA,6BACA,kFACA,4BAAI,8EACJ,4BAAI,qHACJ,4BAAI,kEACJ,6GACA,8BAEJ,yBAAKC,GAAG,WAAWD,UAAU,aACzB,kDACA,yBAAKA,UAAU,eACf,6BACA,4BAAI,iFACJ,4BAAI,8DACJ,4BACI,4BAAI,gFACJ,4BAAI,8EACJ,4BAAI,oEACJ,4BAAI,wEACJ,4BAAI,yGAER,8BAEJ,yBAAKC,GAAG,kBAAkBD,UAAU,aAChC,+CACA,yBAAKA,UAAU,eACf,6BACA,4BAAI,8EACJ,4BAAI,uFACJ,4BACI,4BAAI,yGACJ,4BAAI,kFACJ,4BAAI,8DACJ,4BAAI,iFAER,6BACA,4BAAI,6DACJ,4BAAI,iFACJ,4BACI,4BAAI,yFACJ,4BAAI,2FACJ,4BAAI,sEACJ,4BAAI,0EAER,8BAEJ,yBAAKC,GAAG,yBAAyBD,UAAU,aACvC,0DACA,yBAAKA,UAAU,eACf,6BACA,4BACI,4BAAI,mGACJ,4BAAI,4E,GAnFPS,IAAMC,e,gDC6DZC,E,kDAvDb,WAAYC,GACX,IAAD,8BACE,cAAMA,IACDC,MAAQ,CAACC,QAAS,IAFzB,E,iMAOmBC,OAAOC,MAAM,6FAC5B,CACIC,OAAQ,QAGZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,OALdC,E,OAOJC,KAAKC,SAAS,CAACT,QAASO,EAAI,U,qIAK1B,OACE,yBAAKrB,UAAU,OACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,eAAd,4DACA,wBAAIA,UAAU,eAAd,+FACA,6BACA,kBAACwB,EAAA,EAAD,CAAQhB,KAAK,+FAA+FiB,QAAQ,WAApH,YACA,6BACA,6BAEA,kBAACC,EAAA,EAAD,KACGJ,KAAKT,MAAMC,QAAQa,KAAI,SAAAC,GAEpB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAM7B,UAAU,gBACd,kBAAC6B,EAAA,EAAKC,IAAN,CAAUL,QAAQ,MAAMtB,IAAKyB,EAAK,WAAe,GAApB,MAC7B,kBAACC,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAaJ,EAAK,OAClB,kBAACC,EAAA,EAAKI,KAAN,KAAYL,EAAK,UACjB,kBAACJ,EAAA,EAAD,CAAQhB,KAAMoB,EAAK,IAASH,QAAQ,QAApC,iBAGJ,wC,GA7CChB,IAAMC,eCmDdwB,E,kDAnDb,WAAYtB,GACX,IAAD,8BACE,cAAMA,IACDC,MAAQ,CAACsB,MAAO,IAFvB,E,iMAOmBpB,OAAOC,MAAM,+CAC5B,CACIC,OAAQ,MACR,8BAA+B,MAEnCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,OALdC,E,OAOJC,KAAKC,SAAS,CAACY,MAAOd,I,qIAKpB,OACI,yBAAKrB,UAAU,OACf,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,eAAd,4DACA,wBAAIA,UAAU,eAAd,iEACA,6BACA,kBAACwB,EAAA,EAAD,CAAQhB,KAAK,+FAA+FiB,QAAQ,WAApH,YACA,6BACA,6BACGH,KAAKT,MAAMsB,MAAMR,KAAI,SAAAS,GAElB,OACE,6BACE,kBAACP,EAAA,EAAD,CAAM7B,UAAU,gBACd,kBAAC6B,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAaI,EAAI,MACjB,kBAACP,EAAA,EAAKI,KAAN,KAAYG,EAAI,aAChB,kBAACZ,EAAA,EAAD,CAAQhB,KAAM4B,EAAI,SAAcX,QAAQ,QAAxC,oBAGJ,uC,GA1CChB,IAAMC,eCkDd2B,E,kDA3Cb,WAAYzB,GACX,IAAD,8BACE,cAAMA,IACDC,MAAQ,CAACyB,UAAW,SAAUC,WAAW,GAFhD,E,wDAKYC,EAAOC,GAEjBD,EAAME,iBACNpB,KAAKC,SAAS,CAACoB,SAAUF,EAAUF,WAAW,M,+BAI/C,IAAD,OACE,OACE,6BACE,kBAACK,EAAA,EAAD,CAAQC,GAAG,OAAOpB,QAAQ,QACxB,kBAACmB,EAAA,EAAOE,MAAR,CAActC,KAAK,+BAA+BF,OAAO,SAASC,IAAI,uBAAtE,aACA,kBAACwC,EAAA,EAAD,CAAK/C,UAAU,WACb,kBAAC+C,EAAA,EAAIC,KAAL,CAAUC,QAAS,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAG,YAA9C,UACA,kBAACH,EAAA,EAAIC,KAAL,CAAUC,QAAS,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAG,cAA9C,YACA,kBAACH,EAAA,EAAIC,KAAL,CAAUC,QAAS,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAG,cAA9C,UAIJ,kBAACE,EAAA,EAAD,CAAMC,SAAU,WAAO,EAAK9B,SAAS,CAACe,UAAW,EAAKzB,MAAM8B,SAAUJ,WAAW,KAAUe,GAAIhC,KAAKT,MAAM0B,WACxG,yBAAKtC,GAAG,QACoB,WAAzBqB,KAAKT,MAAMyB,WACV,kBAAC,EAAD,MAEwB,aAAzBhB,KAAKT,MAAMyB,WACV,kBAAC,EAAD,MAEwB,aAAzBhB,KAAKT,MAAMyB,WACV,kBAAC,EAAD,a,GApCY7B,IAAMC,eCGZ6C,QACW,cAA7BxC,OAAOyC,SAASC,UAEe,UAA7B1C,OAAOyC,SAASC,UAEhB1C,OAAOyC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhD,MAAK,SAAAiD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.819c2216.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Resume extends React.PureComponent\r\n{\r\n  render()\r\n  {\r\n      return(\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8 mx-auto\">\r\n                <div id=\"header\" className=\"text-center\">\r\n                    <img alt=\"\" src=\"https://avatars2.githubusercontent.com/u/35775195?v=4\" height=\"`15%\" width=\"15%\"/>\r\n                    <h3>Matthew L. McPeak</h3>\r\n                    <h4>128 Manchester Place | Kingsport, TN 37663</h4>\r\n                    <h4>(423) 791-8627 | <a className=\"text-white\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/McPeakDev/\"><u>GitHub</u></a> | <a className=\"text-white\" href=\"mailto:m.mcpeakcs@gmail.com\"><u>m.mcpeakcs@gmail.com</u></a></h4>\r\n                    <br/>\r\n                    <div className=\"border-top\"></div>\r\n                </div>\r\n                <div id=\"summary\" className=\"text-left\">\r\n                    <h5>Summary Of Qualifications</h5>\r\n                    <br/>\r\n                    <h5>Detail-oriented and motivated Software Developer, that enjoys interacting with people. A highly efficient programmer, problem solver, and team player. Great troubleshooter finding the root of problems. Enjoys helping people and achieving client satisfaction.</h5>\r\n                    <br/>\r\n                </div>\r\n                <div id=\"education\" className=\"text-left\">\r\n                    <h5>Education</h5>\r\n                    <div className=\"border-top\"></div>\r\n                    <br/>\r\n                    <h5>East Tennessee State University, Johnson City, TN</h5>\r\n                    <h5><b>Bachelor of Computer Science: Information Technology</b></h5>\r\n                    <h5><b>Accreditation: Computing Accreditation Commission (CAC) of ABET</b></h5>\r\n                    <h5><b>Major GPA: 3.46, Graduated May 2020</b></h5>\r\n                    <h5>Key Courses: Advanced Web Development, Software Engineering II, Senior Project</h5>\r\n                    <h5>Honors: Academic Performance Scholarship (APS), TN Hope Scholarship</h5>\r\n                    <br/>\r\n                    <h5>Northeast State Community College, Blountville, TN</h5>\r\n                    <h5><b>Associate of Applied Science: Computer Science</b></h5>\r\n                    <h5><b>Accreditation: Association of Technology, Management, and Applied Engineering (ATMAE)</b></h5>\r\n                    <h5><b>Major GPA: 4.0, Graduated May 2018</b></h5>\r\n                    <h5>Honors: Summa Cum Laude, TN Hope Scholarship Recipient, ACM Chapter Treasurer</h5>\r\n                    <br/>\r\n                </div>\r\n                <div id=\"projects\" className=\"text-left\">\r\n                    <h5>Project Experience</h5>\r\n                    <div className=\"border-top\"></div>\r\n                    <br/>\r\n                    <h5><b>Bike Shop Analytics, Lead Developer / Git Manager</b></h5>\r\n                    <h5><b>Software Engineering II (2020)</b></h5>\r\n                    <ul>\r\n                        <li><h5>Incorporated the Agile methodology using Scrum.</h5></li>\r\n                        <li><h5>Developed fully functioning web microservices</h5></li>\r\n                        <li><h5>Developed in React.JS and .NET Core</h5></li>\r\n                        <li><h5>Created a DevOps Pipeline using Jenkins</h5></li>\r\n                        <li><h5>Created a RESTful API for microservices and SQL database communication.</h5></li>\r\n                    </ul>\r\n                    <br/>\r\n                </div>\r\n                <div id=\"work-experience\" className=\"text-left\">\r\n                    <h5>Work Experience</h5>\r\n                    <div className=\"border-top\"></div>\r\n                    <br/>\r\n                    <h5><b>Staff (APS Student Worker), 05/2018 to 05/2020</b></h5>\r\n                    <h5><b>College of Nursing I.T. at ETSU – Johnson City, TN</b></h5>\r\n                    <ul>\r\n                        <li><h5>Supported staff in the ETSU College of Nursing with PC and Mac requests.</h5></li>\r\n                        <li><h5>Fixed printers when printers are unable to print.</h5></li>\r\n                        <li><h5>Stocked printer in Mail Room.</h5></li>\r\n                        <li><h5>Installed PCs and its peripherals where needed.</h5></li>\r\n                    </ul>\r\n                    <br/>\r\n                    <h5><b>IT Intern, 05/2018 to 05/2020</b></h5>\r\n                    <h5><b>Good Samaritan Ministries – Johnson City, TN</b></h5>\r\n                    <ul>\r\n                        <li><h5>Rolled out a new backup solution to essential computers.</h5></li>\r\n                        <li><h5>Developed custom software for use within the organization.</h5></li>\r\n                        <li><h5>Troubleshoots computers and printers.</h5></li>\r\n                        <li><h5>Implemented a password keeping solution.</h5></li>\r\n                    </ul>\r\n                    <br/>\r\n                </div>\r\n                <div id=\"activities-memberships\" className=\"text-left\">\r\n                    <h5>Activities And Memberships</h5>\r\n                    <div className=\"border-top\"></div>\r\n                    <br/>\r\n                    <ul>\r\n                        <li><h5>Warrior’s Path State Park (Disc Golf, Fishing), Kingsport, TN</h5></li>\r\n                        <li><h5>Association for Computing Machinery</h5></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Resume;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nclass NewsDemo extends React.PureComponent\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {stories: []};\r\n  }\r\n\r\n  async componentWillMount()\r\n  {\r\n    let data = await window.fetch(\"https://api.nytimes.com/svc/topstories/v2/us.json?api-key=ZzdkUqtGJNHp1C7c4HOUU0taMGQHjeVN\", \r\n      {\r\n          method: \"GET\",\r\n\r\n      }\r\n    ).then(res => res.json());\r\n\r\n    this.setState({stories: data[\"results\"]})\r\n  }\r\n\r\n  render()\r\n  {\r\n      return(\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <h2 className=\"text-center\">This demonstrates the use of an API and dynamic mapping.</h2>\r\n            <h2 className=\"text-center\">This displays the top news stories from the New York Times for the current day using React.</h2>\r\n            <br/>\r\n            <Button href=\"https://github.com/McPeakDev/McPeakDev.github.io/blob/development/src/Components/NewsDemo.js\" variant=\"primary\">See Code</Button>\r\n            <br/>\r\n            <br/>\r\n\r\n            <CardColumns>\r\n              {this.state.stories.map(story =>\r\n                {\r\n                  return(\r\n                    <div>\r\n                      <Card className=\"bg-secondary\">\r\n                        <Card.Img variant=\"top\" src={story[\"multimedia\"][0][\"url\"]} />\r\n                        <Card.Body>\r\n                          <Card.Title>{story[\"title\"]}</Card.Title>\r\n                          <Card.Text>{story[\"abstract\"]}</Card.Text>\r\n                          <Button href={story[\"url\"]} variant=\"dark\">See Article</Button>\r\n                        </Card.Body>\r\n                      </Card>\r\n                      <br/>\r\n                    </div>\r\n                  );\r\n                }\r\n              )}\r\n            </CardColumns>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default NewsDemo;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Projects extends React.PureComponent\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {repos: []};\r\n  }\r\n\r\n  async componentWillMount()\r\n  {\r\n    let data = await window.fetch(\"https://api.github.com/users/McPeakDev/repos\", \r\n      {\r\n          method: \"GET\",\r\n          'Access-Control-Allow-Origin': \"*\"\r\n      }\r\n    ).then(res => res.json());\r\n\r\n    this.setState({repos: data})\r\n  }\r\n\r\n  render()\r\n  {\r\n      return(\r\n          <div className=\"row\">\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <h2 className=\"text-center\">This demonstrates the use of an API and dynamic mapping.</h2>\r\n            <h2 className=\"text-center\">This displays all of my public repos from Github using React.</h2>\r\n            <br/>\r\n            <Button href=\"https://github.com/McPeakDev/McPeakDev.github.io/blob/development/src/Components/Projects.js\" variant=\"primary\">See Code</Button>\r\n            <br/>\r\n            <br/>\r\n              {this.state.repos.map(repo =>\r\n                {\r\n                  return(\r\n                    <div>\r\n                      <Card className=\"bg-secondary\">\r\n                        <Card.Body>\r\n                          <Card.Title>{repo[\"name\"]}</Card.Title>\r\n                          <Card.Text>{repo[\"description\"]}</Card.Text>\r\n                          <Button href={repo[\"html_url\"]} variant=\"dark\">See Repository</Button>\r\n                        </Card.Body>\r\n                      </Card>\r\n                      <br/>\r\n                    </div>\r\n                  );\r\n                }\r\n              )}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Fade from 'react-bootstrap/Fade'\r\nimport Resume from './Resume'\r\nimport News from './NewsDemo'\r\nimport Projects from './Projects'\r\n\r\n\r\nclass LandingPage extends React.PureComponent\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {linkState: \"Resume\", pageShown: true};\r\n  }\r\n\r\n  handleClick(event, linkName)\r\n  {\r\n    event.preventDefault();\r\n    this.setState({nextLink: linkName, pageShown: false});\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"https://github.com/McPeakDev\" target=\"_blank\" rel=\"noopener noreferrer\">McPeakDev</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link onClick={(e) => this.handleClick(e, \"Resume\")}>Resume</Nav.Link>\r\n            <Nav.Link onClick={(e) => this.handleClick(e, \"Projects\")}>Projects</Nav.Link>\r\n            <Nav.Link onClick={(e) => this.handleClick(e, \"Top News\")}>News</Nav.Link>\r\n\r\n          </Nav>\r\n        </Navbar>\r\n        <Fade onExited={() => {this.setState({linkState: this.state.nextLink, pageShown: true});}} in={this.state.pageShown}>\r\n          <div id=\"body\">\r\n            {this.state.linkState === \"Resume\" &&\r\n              <Resume/>\r\n            }\r\n            {this.state.linkState === \"Projects\" &&\r\n              <Projects />\r\n            }\r\n            {this.state.linkState === \"Top News\" &&\r\n              <News />\r\n            }\r\n          </div>\r\n        </Fade>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LandingPage from './Components/LandingPage';\r\nimport * as serviceWorker from './Services/serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <LandingPage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}